// <auto-generated />
using HR.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221027204456_datanew")]
    partial class datanew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HR.API.Data.Entities.Funcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("Funciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Instalador"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Service"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Red"
                        });
                });

            modelBuilder.Entity("HR.API.Data.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Materiales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Conector RG59",
                            Nombre = "RG 59"
                        });
                });

            modelBuilder.Entity("HR.API.Data.Entities.ReclamoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("ReclamoTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Instalacion"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Service"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Red"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Reinstalacion"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
